import com.amazonaws.auth.profile.ProfileCredentialsProvider



buildscript {
    ext {
        springBootPlugin = 'org.springframework.boot:spring-boot-gradle-plugin'
        springBootVersion = '2.0.2.RELEASE'
        thinPlugin = 'org.springframework.boot.experimental:spring-boot-thin-gradle-plugin'
        thinVersion = '1.0.11.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("${springBootPlugin}:${springBootVersion}")
        classpath("${thinPlugin}:${thinVersion}")
    }
}
plugins {
    id 'maven-publish'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
    awsCredentials = new ProfileCredentialsProvider().credentials
}

dependencies {
    compile 'com.techandsolve:service:1.0'
    compile 'com.techandsolve:usecase:1.0'
    compile 'com.techandsolve:domain:1.0'

    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-webflux'

    compile 'com.h2database:h2:1.4.197'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url "s3://mbaronsofka/releases"
            credentials(AwsCredentials) {
                accessKey awsCredentials.AWSAccessKeyId
                secretKey awsCredentials.AWSSecretKey
            }
        }
    }
}

 